function EventEmitter(){this.events={}}function Model(){EventEmitter.call(this),this._milliseconds=this.setMillisecond(),this._seconds=this.setSecond(),this._minutes=this.setMinute(),this._hours=this.setHour()}function Arc(t,e,i,n){this.outerRadius=t,this.arcWidth=e,this.innerRadius=this.outerRadius-this.arcWidth,this.arcStartInDegree=1,this._color=i,this.cornerSize=3,this.ctx=n}function View(t){EventEmitter.call(this),this._model=t,this.ctx=$("#canvas")[0].getContext("2d"),this._elements=["hour","minute","second","millisecond"],this._getElements(),this._init(),this._bindActions()}function Controller(t,e){this._view=t,this._model=e,this._bindActions()}EventEmitter.prototype.on=function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},EventEmitter.prototype.off=function(t,e){if(this.events[t]){var i=this.events[t].indexOf(e);i>-1&&this.events[t].splice(i,1)}},EventEmitter.prototype.emit=function(t,e){this.events[t]&&this.events[t].forEach(function(t){t(e)})},Model.prototype=Object.create(EventEmitter.prototype),Model.prototype.constructor=Model,Model.prototype.start=function(){this._tic(),window.requestAnimationFrame(this.start.bind(this))},Model.prototype._tic=function(){this.emit("tic"),this.setMillisecond(),this.setSecond(),this.setMinute(),this.setHour()},Model.prototype.getHour=function(){return this._hours},Model.prototype.getMinute=function(){return this._minutes},Model.prototype.getSecond=function(){return this._seconds},Model.prototype.getMillisecond=function(){return this._milliseconds},Model.prototype.getSecondInMls=function(){var t=this._seconds,e=this._milliseconds,i=1e3*t+e;return i},Model.prototype.getMinuteInMls=function(){var t=this.getSecondInMls(),e=this._minutes,i=60*e*1e3+t;return i},Model.prototype.getMinuteInS=function(){var t=this._seconds,e=this._minutes,i=60*e+t;return i},Model.prototype.getHourInS=function(){var t=this.getMinuteInS(),e=this._hours,i=60*e*60+t;return i},Model.prototype.getHourInS=function(){var t=this.getMinuteInS(),e=this._hours,i=60*e*60+t;return i},Model.prototype.getSecondInDegree=function(){var t=this.getSecondInMls(),e=.006*t;return e},Model.prototype.getMinuteInDegree=function(){var t=this.getMinuteInMls(),e=1e-4*t;return e},Model.prototype.getHourInDegree=function(){var t=this.getHourInS(),e=t*(360/86400);return e},Model.prototype.setHour=function(t){var e=new Date;this._hours=e.getHours(),this.emit("hChange")},Model.prototype.setMinute=function(){var t=new Date;this._minutes=t.getMinutes(),this.emit("mChange")},Model.prototype.setSecond=function(){var t=new Date;this._seconds=t.getSeconds(),this.emit("sChange")},Model.prototype.setMillisecond=function(){var t=new Date;this._milliseconds=t.getMilliseconds(),this.emit("msChange")},Arc.prototype.drawArc=function(t){this.arcEndInDegree=t,this.outerCornerX=(this.outerRadius-this.cornerSize)*Math.cos(this.arcEndInDegree*(Math.PI/180)),this.outerCornerY=(this.outerRadius-this.cornerSize)*Math.sin(this.arcEndInDegree*(Math.PI/180)),this.innerCornerX=(this.innerRadius+this.cornerSize)*Math.cos(this.arcEndInDegree*(Math.PI/180)),this.innerCornerY=(this.innerRadius+this.cornerSize)*Math.sin(this.arcEndInDegree*(Math.PI/180)),this.outerCornerArcStart=(0+this.arcEndInDegree)*(Math.PI/180),this.outerCornerArcEnd=(90+this.arcEndInDegree)*(Math.PI/180),this.innerCornerArcStart=(90+this.arcEndInDegree)*(Math.PI/180),this.innerCornerArcEnd=(180+this.arcEndInDegree)*(Math.PI/180),this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(this.innerRadius+this.cornerSize,0,this.cornerSize,180*(Math.PI/180),270*(Math.PI/180),!1),this.ctx.arc(this.outerRadius-this.cornerSize,0,this.cornerSize,270*(Math.PI/180),0*(Math.PI/180),!1),this.ctx.arc(0,0,this.outerRadius,this.arcStartInDegree*(Math.PI/180),this.arcEndInDegree*(Math.PI/180),!1),this.ctx.arc(this.outerCornerX,this.outerCornerY,this.cornerSize,this.outerCornerArcStart,this.outerCornerArcEnd,!1),this.ctx.arc(this.innerCornerX,this.innerCornerY,this.cornerSize,this.innerCornerArcStart,this.innerCornerArcEnd,!1),this.ctx.arc(0,0,this.innerRadius,this.arcEndInDegree*(Math.PI/180),this.arcStartInDegree*(Math.PI/180),!0),this.ctx.closePath(),this.ctx.fillStyle=this._color,this.ctx.fill(),this.ctx.restore()},View.prototype=Object.create(EventEmitter.prototype),View.prototype.constructor=View,View.prototype._init=function(){this._redraw()},View.prototype._getElements=function(){this._elements.forEach(function(t){this["_"+t]=document.getElementById(t)},this)},View.prototype._bindActions=function(){this._model.on("msChange",this._drawMillisecondInTxt.bind(this)),this._model.on("sChange",this._drawSecondInTxt.bind(this)),this._model.on("sChange",this._drawSecond.bind(this)),this._model.on("tic",this.canvasRefresh.bind(this)),this._model.on("sChange",this._drawSecondInArc.bind(this)),this._model.on("mChange",this._drawMinuteInArc.bind(this)),this._model.on("hChange",this._drawHourInArc.bind(this)),this._model.on("mChange",this._drawMinuteInTxt.bind(this)),this._model.on("hChange",this._drawHourInTxt.bind(this))},View.prototype.canvasRefresh=function(){this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,500,500),this.ctx.translate(250,250),this.ctx.rotate(-90*Math.PI/180)},View.prototype._redraw=function(){this._secondArc=new Arc(240,25,"orange",this.ctx),this._minuteArc=new Arc(210,25,"blue",this.ctx),this._hourArc=new Arc(180,25,"green",this.ctx),this.canvasRefresh(),this._drawHourInTxt(),this._drawMinuteInTxt(),this._drawSecondInTxt(),this._drawSecond(),this._drawMillisecondInTxt(),this._drawSecondInArc(),this._drawMinuteInArc(),this._drawHourInArc()},View.prototype._drawDiv=function(t,e,i){var n=$("<div>").css("height","14px").css("width",t+"%").css("background-color",e).css("margin","1px 0px").text(i).css("text-align","right").css("color","white").css("font-family","arial").css("padding-right","2px");return n},View.prototype._drawSecondInArc=function(){var t=this._model.getSecondInDegree();this._secondArc.drawArc(t)},View.prototype._drawMinuteInArc=function(){var t=this._model.getMinuteInDegree();this._minuteArc.drawArc(t)},View.prototype._drawHourInArc=function(){var t=this._model.getHourInDegree();this._hourArc.drawArc(t)},View.prototype._drawHourInTxt=function(){var t=this._model.getHour();this._hour.innerHTML=10>t?"0"+t:t},View.prototype._drawMinuteInTxt=function(){var t=this._model.getMinute();this._minute.innerHTML=10>t?"0"+t:t},View.prototype._drawSecondInTxt=function(){var t=this._model.getSecond();this._second.innerHTML=t},View.prototype._drawMillisecondInTxt=function(){var t=this._model.getMillisecond();this._millisecond.innerHTML=t},View.prototype._drawSecond=function(){var t=this._model.getSecondInMls();$("#drawS").empty();var e;e=t*(100/6e4);var i=this._drawDiv(e,"orange",Math.floor(t/1e3)+" secondes");$("#drawS").append(i)},Controller.prototype._bindActions=function(){};var model=new Model,view=new View(model),controller=new Controller(view,model);model.start();
//# sourceMappingURL=data:application/json;base64,
