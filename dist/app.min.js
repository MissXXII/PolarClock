function EventEmitter(){this.events={}}function Model(){EventEmitter.call(this),this._milliseconds=0,this._seconds=0,this._minutes=0,this._hours=0,this._date=0,this._day=0,this._month=0,this._year=0}function Arc(t,e,i,n){this.outerRadius=t,this.arcWidth=e,this.innerRadius=this.outerRadius-this.arcWidth,this.arcStartInDegree=0,this._color=i,this.cornerSize=4,this.ctx=n}function View(t){EventEmitter.call(this),this._model=t,this.ctx=$("#canvas")[0].getContext("2d"),this._elements=["hour","minute","second"],this._getElements(),this._init(),this._bindActions()}function Controller(t,e){this._view=t,this._model=e,this._bindActions()}EventEmitter.prototype.on=function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},EventEmitter.prototype.off=function(t,e){if(this.events[t]){var i=this.events[t].indexOf(e);i>-1&&this.events[t].splice(i,1)}},EventEmitter.prototype.emit=function(t,e){this.events[t]&&this.events[t].forEach(function(t){t(e)})},Model.prototype=Object.create(EventEmitter.prototype),Model.prototype.constructor=Model,Model.prototype.start=function(){this._setYear(),this._tic()},Model.prototype._tic=function(){this.emit("tic"),this._setMilliseconds(),this._setSeconds(),this._setMinutes(),this._setHours(),this._setDate(),this._setDay(),this._setMonth(),window.requestAnimationFrame(this._tic.bind(this))},Model.prototype._getMilliseconds=function(){return this._milliseconds},Model.prototype._getSeconds=function(){return this._seconds},Model.prototype._getMinutes=function(){return this._minutes},Model.prototype._getHours=function(){return this._hours},Model.prototype._getDate=function(){return this._date},Model.prototype._getDay=function(){return this._day},Model.prototype._getMonth=function(){return this._month},Model.prototype._getYear=function(){return this._year},Model.prototype.getSecondsInMls=function(){var t=this._getSeconds(),e=this._getMilliseconds(),i=1e3*t+e;return i},Model.prototype.getMinutesInMls=function(){var t=this.getSecondsInMls(),e=this._getMinutes(),i=60*e*1e3+t;return i},Model.prototype.getMinutesInS=function(){var t=this._getSeconds(),e=this._getMinutes(),i=60*e+t;return i},Model.prototype.getHoursInS=function(){var t=this.getMinutesInS(),e=this._getHours(),i=60*e*60+t;return i},Model.prototype.getHoursInMin=function(){var t=this._getMinutes(),e=this._getHours(),i=60*e+t;return i},Model.prototype.getDateInMin=function(){var t=this.getHoursInMin(),e=this._getDate(),i=24*(e-1)*60+t;return i},Model.prototype.getDateInH=function(){var t=this._getHours(),e=this._getDate(),i=24*(e-1)+t;return i},Model.prototype.getDayInMin=function(){var t=this.getHoursInMin(),e=this._getDay(),i=24*(e>0?e-=1:jour=6)*60+t;return i},Model.prototype.getSecondsInDegree=function(){var t=this.getSecondsInMls(),e=.006*t;return e},Model.prototype.getMinutesInDegree=function(){var t=this.getMinutesInMls(),e=1e-4*t;return e},Model.prototype.getHoursInDegree=function(){var t=this.getHoursInS(),e=t*(360/86400);return e},Model.prototype.getDaysMaxInMonth=function(t,e){return new Date(t,e+1,0).getDate()},Model.prototype.getDateInDegree=function(){var t=this.getDateInMin(),e=this.getDaysMaxInMonth(this._getYear(),this._getMonth()),i=t*(360/(24*e*60));return i},Model.prototype.getDayInDegree=function(){var t=this.getDayInMin(),e=t*(360/10080);return e},Model.prototype.getMonthInDegree=function(){var t=this.getDateInH(),e=this._getMonth(),i=this.getDaysMaxInMonth(this._getYear(),this._getMonth()),n=30*e+t*(30/(24*i));return n},Model.prototype._setMilliseconds=function(){var t=new Date;this._milliseconds=t.getMilliseconds(),this.emit("msChange")},Model.prototype._setSeconds=function(){var t=new Date;this._seconds=t.getSeconds(),this.emit("sChange")},Model.prototype._setMinutes=function(){var t=new Date;this._minutes=t.getMinutes(),this.emit("mChange")},Model.prototype._setHours=function(){var t=new Date;this._hours=t.getHours(),this.emit("hChange")},Model.prototype._setDate=function(){var t=new Date;this._date=t.getDate(),this.emit("dateChange")},Model.prototype._setDay=function(){var t=new Date;this._day=t.getDay(),this.emit("dayChange")},Model.prototype._setMonth=function(){var t=new Date;this._month=t.getMonth(),this.emit("monthChange")},Model.prototype._setYear=function(){var t=new Date;this._year=t.getFullYear(),this.emit("yearChange")},Arc.prototype.drawArc=function(t){this.arcEndInDegree=t,this.outerCornerX=(this.outerRadius-this.cornerSize)*Math.cos(this.arcEndInDegree*(Math.PI/180)),this.outerCornerY=(this.outerRadius-this.cornerSize)*Math.sin(this.arcEndInDegree*(Math.PI/180)),this.innerCornerX=(this.innerRadius+this.cornerSize)*Math.cos(this.arcEndInDegree*(Math.PI/180)),this.innerCornerY=(this.innerRadius+this.cornerSize)*Math.sin(this.arcEndInDegree*(Math.PI/180)),this.outerCornerArcStart=(0+this.arcEndInDegree)*(Math.PI/180),this.outerCornerArcEnd=(90+this.arcEndInDegree)*(Math.PI/180),this.innerCornerArcStart=(90+this.arcEndInDegree)*(Math.PI/180),this.innerCornerArcEnd=(180+this.arcEndInDegree)*(Math.PI/180),this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(this.innerRadius+this.cornerSize,0,this.cornerSize,180*(Math.PI/180),270*(Math.PI/180),!1),this.ctx.arc(this.outerRadius-this.cornerSize,0,this.cornerSize,270*(Math.PI/180),0*(Math.PI/180),!1),this.ctx.arc(0,0,this.outerRadius,this.arcStartInDegree*(Math.PI/180),this.arcEndInDegree*(Math.PI/180),!1),this.ctx.arc(this.outerCornerX,this.outerCornerY,this.cornerSize,this.outerCornerArcStart,this.outerCornerArcEnd,!1),this.ctx.arc(this.innerCornerX,this.innerCornerY,this.cornerSize,this.innerCornerArcStart,this.innerCornerArcEnd,!1),this.ctx.arc(0,0,this.innerRadius,this.arcEndInDegree*(Math.PI/180),this.arcStartInDegree*(Math.PI/180),!0),this.ctx.closePath(),this.ctx.fillStyle=this._color,this.ctx.fill(),this.ctx.restore()},Arc.prototype.drawArcText=function(t,e,i){$("#svg").empty();var n="http://www.w3.org/2000/svg",r=document.createElementNS(n,"defs"),s=document.createElementNS(n,"path"),o=document.createElementNS(n,"text"),h=document.createElementNS(n,"textpath");s.setAttribute("id","timeInText"),s.setAttribute("d",this.arcText(250,250,200,0,e)),o.setAttribute("font-family","Verdana"),o.setAttribute("font-size","15"),o.setAttribute("text-anchor","end"),h.setAttribute("xlink:href","#timeInText"),h.setAttribute("startOffset","100%"),h.setAttribute("id","textcurve"),h.textContent=t+" "+i,r.appendChild(s),o.appendChild(h),svg.appendChild(r),svg.appendChild(o),$("#svg").css("border","1px black solid"),$("#cont").html($("#cont").html())},Arc.prototype.arcText=function(t,e,i,n,r){var s=-Math.PI/2,o=s+n*Math.PI/180,h=s+r*Math.PI/180,a=(h-o)%(2*Math.PI)>Math.PI?1:0,c=parseInt(t+i*Math.cos(o)),d=parseInt(e+i*Math.sin(o)),u=parseInt(t+i*Math.cos(h)),_=parseInt(e+i*Math.sin(h)),p=" ",l="";return l+="M"+p+c+p+d+p,l+="A"+p+i+p+i+p+s+p+a+p+1+p+u+p+_},View.prototype=Object.create(EventEmitter.prototype),View.prototype.constructor=View,View.prototype._init=function(){this._redraw()},View.prototype._getElements=function(){this._elements.forEach(function(t){this["_"+t]=document.getElementById(t)},this)},View.prototype._bindActions=function(){this._model.on("sChange",this._drawSeconds.bind(this)),this._model.on("mChange",this._drawMinutes.bind(this)),this._model.on("hChange",this._drawHours.bind(this)),this._model.on("tic",this.canvasRefresh.bind(this)),this._model.on("sChange",this._drawSecondsArc.bind(this)),this._model.on("mChange",this._drawMinutesArc.bind(this)),this._model.on("hChange",this._drawHoursArc.bind(this)),this._model.on("dateChange",this._drawDateArc.bind(this)),this._model.on("dayChange",this._drawDayArc.bind(this)),this._model.on("monthChange",this._drawMonthArc.bind(this))},View.prototype._redraw=function(){this._drawSeconds(),this._drawMinutes(),this._drawHours(),this._secondsArc=new Arc(240,25,"red",this.ctx),this._minutesArc=new Arc(210,25,"orange",this.ctx),this._hoursArc=new Arc(180,25,"gold",this.ctx),this._dateArc=new Arc(150,25,"purple",this.ctx),this._dayArc=new Arc(120,25,"fuchsia",this.ctx),this._monthArc=new Arc(90,25,"pink",this.ctx),this.canvasRefresh(),this._drawSecondsArc(),this._drawMinutesArc(),this._drawHoursArc(),this._drawDateArc(),this._drawDayArc(),this._drawMonthArc()},View.prototype.canvasRefresh=function(){this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,canvas.width,canvas.height),this.ctx.translate(canvas.width/2,canvas.height/2),this.ctx.rotate(-90*Math.PI/180)},View.prototype._drawSecondsArc=function(){var t=this._model.getSecondsInDegree();this._secondsArc.drawArc(t)},View.prototype._drawMinutesArc=function(){var t=this._model.getMinutesInDegree();this._minutesArc.drawArc(t)},View.prototype._drawHoursArc=function(){var t=this._model.getHoursInDegree();this._hoursArc.drawArc(t)},View.prototype._drawDateArc=function(){var t=this._model.getDateInDegree();this._dateArc.drawArc(t)},View.prototype._drawDayArc=function(){var t=this._model.getDayInDegree();this._dayArc.drawArc(t)},View.prototype._drawMonthArc=function(){var t=this._model.getMonthInDegree();this._monthArc.drawArc(t)},View.prototype._drawDiv=function(t,e,i){var n=$("<div>").attr("class","timediv").css("width",t+"%").css("background-color",e).text(i);return n},View.prototype._drawSeconds=function(){var t=this._model.getSecondsInMls();$("#drawS").empty();var e;e=t*(100/6e4);var i=this._drawDiv(e,"red",this._model._getSeconds()+" s");$("#drawS").append(i)},View.prototype._drawMinutes=function(){var t=this._model.getMinutesInMls();$("#drawM").empty();var e;e=t*(100/36e5);var i=this._drawDiv(e,"orange",this._model._getMinutes()+" min");$("#drawM").append(i)},View.prototype._drawHours=function(){var t=this._model.getHoursInS();$("#drawH").empty();var e;e=t*(100/86400);var i=this._drawDiv(e,"gold",this._model._getHours()+" h");$("#drawH").append(i)},Controller.prototype._bindActions=function(){};var model=new Model,view=new View(model),controller=new Controller(view,model);model.start();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50RW1pdHRlci5qcyIsIm1vZGVsLmpzIiwiYXJjLmpzIiwidmlldy5qcyIsImNvbnRyb2xsZXIuanMiLCJhcHAuanMiXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwidGhpcyIsImV2ZW50cyIsIk1vZGVsIiwiY2FsbCIsIl9taWxsaXNlY29uZHMiLCJfc2Vjb25kcyIsIl9taW51dGVzIiwiX2hvdXJzIiwiX2RhdGUiLCJfZGF5IiwiX21vbnRoIiwiX3llYXIiLCJBcmMiLCJvdXRlclJhZGl1cyIsImFyY1dpZHRoIiwiY29sb3IiLCJfY3R4IiwiaW5uZXJSYWRpdXMiLCJhcmNTdGFydEluRGVncmVlIiwiX2NvbG9yIiwiY29ybmVyU2l6ZSIsImN0eCIsIlZpZXciLCJtb2RlbCIsIl9tb2RlbCIsIiQiLCJnZXRDb250ZXh0IiwiX2VsZW1lbnRzIiwiX2dldEVsZW1lbnRzIiwiX2luaXQiLCJfYmluZEFjdGlvbnMiLCJDb250cm9sbGVyIiwidmlldyIsIl92aWV3IiwicHJvdG90eXBlIiwib24iLCJldmVudE5hbWUiLCJmbiIsInB1c2giLCJvZmYiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJlbWl0IiwiZGF0YSIsImZvckVhY2giLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInN0YXJ0IiwiX3NldFllYXIiLCJfdGljIiwiX3NldE1pbGxpc2Vjb25kcyIsIl9zZXRTZWNvbmRzIiwiX3NldE1pbnV0ZXMiLCJfc2V0SG91cnMiLCJfc2V0RGF0ZSIsIl9zZXREYXkiLCJfc2V0TW9udGgiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJiaW5kIiwiX2dldE1pbGxpc2Vjb25kcyIsIl9nZXRTZWNvbmRzIiwiX2dldE1pbnV0ZXMiLCJfZ2V0SG91cnMiLCJfZ2V0RGF0ZSIsIl9nZXREYXkiLCJfZ2V0TW9udGgiLCJfZ2V0WWVhciIsImdldFNlY29uZHNJbk1scyIsImN1cnJlbnRTIiwiY3VycmVudE1scyIsInNJbk1scyIsImdldE1pbnV0ZXNJbk1scyIsImN1cnJlbnRNIiwibUluTWxzIiwiZ2V0TWludXRlc0luUyIsIm1JblMiLCJnZXRIb3Vyc0luUyIsImN1cnJlbnRIIiwiaEluUyIsImdldEhvdXJzSW5NaW4iLCJjdXJyZW50TWluIiwiaEluTWluIiwiZ2V0RGF0ZUluTWluIiwiY3VycmVudERhdGUiLCJkYXRlSW5NaW4iLCJnZXREYXRlSW5IIiwiY3VycmVudEhvdXJzIiwiZGF0ZUluSCIsImdldERheUluTWluIiwiY3VycmVudERheSIsImRheUluTWluIiwiam91ciIsImdldFNlY29uZHNJbkRlZ3JlZSIsInNlY29uZEluRGVncmVlIiwiZ2V0TWludXRlc0luRGVncmVlIiwibWludXRlSW5EZWdyZWUiLCJnZXRIb3Vyc0luRGVncmVlIiwiaG91ckluRGVncmVlIiwiZ2V0RGF5c01heEluTW9udGgiLCJ5ZWFyIiwibW9udGgiLCJEYXRlIiwiZ2V0RGF0ZSIsImdldERhdGVJbkRlZ3JlZSIsImRheXNNYXgiLCJkYXRlSW5EZWdyZWUiLCJnZXREYXlJbkRlZ3JlZSIsImRheUluRGVncmVlIiwiZ2V0TW9udGhJbkRlZ3JlZSIsImN1cnJlbnRNb250aCIsIm1vbnRoSW5EZWdyZWUiLCJuZXdEYXRlIiwiZ2V0TWlsbGlzZWNvbmRzIiwiZ2V0U2Vjb25kcyIsImdldE1pbnV0ZXMiLCJnZXRIb3VycyIsImdldERheSIsImdldE1vbnRoIiwiZ2V0RnVsbFllYXIiLCJkcmF3QXJjIiwidGltZUluRGVncmVlIiwiYXJjRW5kSW5EZWdyZWUiLCJvdXRlckNvcm5lclgiLCJNYXRoIiwiY29zIiwiUEkiLCJvdXRlckNvcm5lclkiLCJzaW4iLCJpbm5lckNvcm5lclgiLCJpbm5lckNvcm5lclkiLCJvdXRlckNvcm5lckFyY1N0YXJ0Iiwib3V0ZXJDb3JuZXJBcmNFbmQiLCJpbm5lckNvcm5lckFyY1N0YXJ0IiwiaW5uZXJDb3JuZXJBcmNFbmQiLCJzYXZlIiwiYmVnaW5QYXRoIiwiYXJjIiwiY2xvc2VQYXRoIiwiZmlsbFN0eWxlIiwiZmlsbCIsInJlc3RvcmUiLCJkcmF3QXJjVGV4dCIsInRpbWUiLCJhbmdsZSIsInZhbHVlIiwiZW1wdHkiLCJzdmducyIsImRlZnMiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnROUyIsInBhdGgiLCJ0ZXh0IiwidGV4dHBhdGgiLCJzZXRBdHRyaWJ1dGUiLCJhcmNUZXh0IiwidGV4dENvbnRlbnQiLCJhcHBlbmRDaGlsZCIsInN2ZyIsImNzcyIsImh0bWwiLCJjeCIsImN5IiwicmFkaXVzIiwic3RhcnREZWdyZWVzIiwiZW5kRGVncmVlcyIsIm9mZnNldFJhZGlhbnMiLCJzdGFydFJhZGlhbnMiLCJlbmRSYWRpYW5zIiwibGFyZ2VBcmMiLCJzdGFydFgiLCJwYXJzZUludCIsInN0YXJ0WSIsImVuZFgiLCJlbmRZIiwic3BhY2UiLCJhcmNEYXRhIiwiX3JlZHJhdyIsImVsIiwiZ2V0RWxlbWVudEJ5SWQiLCJfZHJhd1NlY29uZHMiLCJfZHJhd01pbnV0ZXMiLCJfZHJhd0hvdXJzIiwiY2FudmFzUmVmcmVzaCIsIl9kcmF3U2Vjb25kc0FyYyIsIl9kcmF3TWludXRlc0FyYyIsIl9kcmF3SG91cnNBcmMiLCJfZHJhd0RhdGVBcmMiLCJfZHJhd0RheUFyYyIsIl9kcmF3TW9udGhBcmMiLCJfc2Vjb25kc0FyYyIsIl9taW51dGVzQXJjIiwiX2hvdXJzQXJjIiwiX2RhdGVBcmMiLCJfZGF5QXJjIiwiX21vbnRoQXJjIiwic2V0VHJhbnNmb3JtIiwiY2xlYXJSZWN0IiwiY2FudmFzIiwid2lkdGgiLCJoZWlnaHQiLCJ0cmFuc2xhdGUiLCJyb3RhdGUiLCJzZWNvbmRzSW5EZWdyZWUiLCJtaW51dGVzSW5EZWdyZWUiLCJob3Vyc0luRGVncmVlIiwiX2RyYXdEaXYiLCJkaXZXaWR0aCIsImRpdiIsImF0dHIiLCJzZWNvbmRzIiwiYXBwZW5kIiwibWludXRlcyIsImhvdXJzIiwiY29udHJvbGxlciJdLCJtYXBwaW5ncyI6IkFBQ0EsUUFBQUEsZ0JBQ0FDLEtBQUFDLFVDRkEsUUFBQUMsU0FDQUgsYUFBQUksS0FB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SyxHQUFBLElBQUEsS0FDQSxJQUFBSixHQUFBbE4sS0FBQWdOLFNBQUFDLEVBQUEsU0FBQWpOLEtBQUF3QixPQUFBd0MsY0FBQSxPQUNBdkMsR0FBQSxVQUFBNEwsT0FBQUgsSUFHQTVMLEtBQUFZLFVBQUFzSixXQUFBLFdBQ0EsR0FBQStCLEdBQUF2TixLQUFBd0IsT0FBQXVELGFBQ0F0RCxHQUFBLFVBQUEySCxPQUNBLElBQUE2RCxFQUNBQSxHQUFBTSxHQUFBLElBQUEsTUFDQSxJQUFBTCxHQUFBbE4sS0FBQWdOLFNBQUFDLEVBQUEsT0FBQWpOLEtBQUF3QixPQUFBeUMsWUFBQSxLQUNBeEMsR0FBQSxVQUFBNEwsT0FBQUgsSUNsSUFuTCxXQUFBRyxVQUFBSixhQUFBLFlDUEEsSUFBQVAsT0FBQSxHQUFBckIsT0FDQThCLEtBQUEsR0FBQVYsTUFBQUMsT0FDQWlNLFdBQUEsR0FBQXpMLFlBQUFDLEtBQUFULE1BRUFBLE9BQUEwQiIsImZpbGUiOiJkaXN0L2FwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBldmVudEVtaXR0ZXIuanNcclxuZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCl7XHJcbiAgdGhpcy5ldmVudHMgPSB7fTsgLy8gYXNzb2NpYXRpdmUgYXJyYXkgOiBldmVudCA9PiBmdW5jdGlvbnMgdG8gY2FsbFxyXG59XHJcblxyXG4vLyBBZGQgYSBmdW5jdGlvbiB0byB0aGUgZXZlbnRcclxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uKGV2ZW50TmFtZSwgZm4pe1xyXG4gIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gPSB0aGlzLmV2ZW50c1tldmVudE5hbWVdIHx8IFtdO1xyXG4gIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0ucHVzaChmbik7XHJcbn07XHJcblxyXG4vLyBSZW1vdmUgYSBmdW5jdGlvbiB0byB0aGUgZXZlbnRcclxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmYgPSBmdW5jdGlvbihldmVudE5hbWUsIGZuKXtcclxuICBpZih0aGlzLmV2ZW50c1tldmVudE5hbWVdKXtcclxuICAgICAgdmFyIGluZGV4ID0gdGhpcy5ldmVudHNbZXZlbnROYW1lXS5pbmRleE9mKGZuKTtcclxuICAgICAgaWYgKGluZGV4ID4gLTEpIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0uc3BsaWNlKGluZGV4LCAxKTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBUcmlnZ2VyIHRoZSBldmVudCAoY2FsbCBhbGwgdGhlIGZ1bmN0aW9ucyBsaW5rZWQpXHJcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uKGV2ZW50TmFtZSwgZGF0YSl7XHJcbiAgaWYodGhpcy5ldmVudHNbZXZlbnROYW1lXSl7XHJcbiAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdLmZvckVhY2goZnVuY3Rpb24oZm4pe1xyXG4gICAgICBmbihkYXRhKTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuIiwiZnVuY3Rpb24gTW9kZWwoKSB7XG4gICAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7IC8vIENhbGwgRXZlbnRFbWl0dGVyIGNvbnN0cnVjdG9yXG4gICAgLy8gTW9kZWwgSW5pdGlhbGlzYXRpb25cbiAgICB0aGlzLl9taWxsaXNlY29uZHMgPSAwO1xuICAgIHRoaXMuX3NlY29uZHMgPSAwO1xuICAgIHRoaXMuX21pbnV0ZXMgPSAwO1xuICAgIHRoaXMuX2hvdXJzID0gMDtcbiAgICB0aGlzLl9kYXRlID0gMDtcbiAgICB0aGlzLl9kYXkgPSAwO1xuICAgIHRoaXMuX21vbnRoID0gMDtcbiAgICB0aGlzLl95ZWFyID0gMDtcbn1cblxuLy8gRXZlbnRFbWl0dGVyIGluaGVyaXRhbmNlXG5Nb2RlbC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEV2ZW50RW1pdHRlci5wcm90b3R5cGUpO1xuTW9kZWwucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTW9kZWw7XG5cbi8vIFN0YXJ0IHRoZSBjbG9ja1xuTW9kZWwucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fc2V0WWVhcigpO1xuICAgIHRoaXMuX3RpYygpO1xufTtcblxuLy8gVGljLi4uXG5Nb2RlbC5wcm90b3R5cGUuX3RpYyA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuZW1pdCgndGljJyk7XG4gICAgdGhpcy5fc2V0TWlsbGlzZWNvbmRzKCk7XG4gICAgdGhpcy5fc2V0U2Vjb25kcygpO1xuICAgIHRoaXMuX3NldE1pbnV0ZXMoKTtcbiAgICB0aGlzLl9zZXRIb3VycygpO1xuICAgIHRoaXMuX3NldERhdGUoKTtcbiAgICB0aGlzLl9zZXREYXkoKTtcbiAgICB0aGlzLl9zZXRNb250aCgpO1xuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5fdGljLmJpbmQodGhpcykpO1xufTtcblxuXG4vLy8vIEdFVCBUSU1FIElOIElUJ1MgT1dOIFZBTExVRSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuTW9kZWwucHJvdG90eXBlLl9nZXRNaWxsaXNlY29uZHMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fbWlsbGlzZWNvbmRzO1xufTtcblxuTW9kZWwucHJvdG90eXBlLl9nZXRTZWNvbmRzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NlY29uZHM7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuX2dldE1pbnV0ZXMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fbWludXRlcztcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5fZ2V0SG91cnMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5faG91cnM7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuX2dldERhdGUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fZGF0ZTtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5fZ2V0RGF5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2RheTtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5fZ2V0TW9udGggPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fbW9udGg7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuX2dldFllYXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5feWVhcjtcbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLy8vLyBHRVQgVElNRSBJTiBPU0VSIFZBTExVRVMgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuTW9kZWwucHJvdG90eXBlLmdldFNlY29uZHNJbk1scyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjdXJyZW50UyA9IHRoaXMuX2dldFNlY29uZHMoKTtcbiAgICB2YXIgY3VycmVudE1scyA9IHRoaXMuX2dldE1pbGxpc2Vjb25kcygpO1xuICAgIHZhciBzSW5NbHMgPSAgKGN1cnJlbnRTICogMTAwMCkgKyBjdXJyZW50TWxzO1xuICAgIHJldHVybiBzSW5NbHM7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuZ2V0TWludXRlc0luTWxzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNJbk1scyA9IHRoaXMuZ2V0U2Vjb25kc0luTWxzKCk7XG4gICAgdmFyIGN1cnJlbnRNID0gdGhpcy5fZ2V0TWludXRlcygpO1xuICAgIHZhciBtSW5NbHMgPSAgKGN1cnJlbnRNICogNjAgKiAxMDAwKSArIHNJbk1scztcbiAgICByZXR1cm4gbUluTWxzO1xufTtcblxuTW9kZWwucHJvdG90eXBlLmdldE1pbnV0ZXNJblMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgY3VycmVudFMgPSB0aGlzLl9nZXRTZWNvbmRzKCk7XG4gICAgdmFyIGN1cnJlbnRNID0gdGhpcy5fZ2V0TWludXRlcygpO1xuICAgIHZhciBtSW5TID0gKGN1cnJlbnRNICogNjApICsgY3VycmVudFM7XG4gICAgcmV0dXJuIG1JblM7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuZ2V0SG91cnNJblMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbUluUyA9IHRoaXMuZ2V0TWludXRlc0luUygpO1xuICAgIHZhciBjdXJyZW50SCA9IHRoaXMuX2dldEhvdXJzKCk7XG4gICAgdmFyIGhJblMgPSAoY3VycmVudEggICogNjAgKiA2MCkgKyBtSW5TO1xuICAgIHJldHVybiBoSW5TO1xufTtcblxuTW9kZWwucHJvdG90eXBlLmdldEhvdXJzSW5NaW4gPSBmdW5jdGlvbigpe1xuICAgIHZhciBjdXJyZW50TWluID0gdGhpcy5fZ2V0TWludXRlcygpO1xuICAgIHZhciBjdXJyZW50SCA9IHRoaXMuX2dldEhvdXJzKCk7XG4gICAgdmFyIGhJbk1pbiA9IChjdXJyZW50SCAqIDYwKSArIGN1cnJlbnRNaW47XG4gICAgcmV0dXJuIGhJbk1pbjtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5nZXREYXRlSW5NaW4gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaEluTWluID0gdGhpcy5nZXRIb3Vyc0luTWluKCk7XG4gICAgdmFyIGN1cnJlbnREYXRlID0gdGhpcy5fZ2V0RGF0ZSgpO1xuICAgIC8vIGEgZGF5IGhhcyAyNCBob3VycyBzbyBpZiB3ZSBhcmUgdGhlIDFzdCB0aGUgZGF5IGlzIGN1cnJlbnRseSBwYXNzaW5nIGZyb20gMCB0byAyNGhcbiAgICB2YXIgZGF0ZUluTWluID0gKChjdXJyZW50RGF0ZSAtIDEpICogMjQgKiA2MCkgKyBoSW5NaW47XG4gICAgcmV0dXJuIGRhdGVJbk1pbjtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5nZXREYXRlSW5IID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGN1cnJlbnRIb3VycyA9IHRoaXMuX2dldEhvdXJzKCk7XG4gICAgdmFyIGN1cnJlbnREYXRlID0gdGhpcy5fZ2V0RGF0ZSgpO1xuICAgIC8vIGEgZGF5IGhhcyAyNCBob3VycyBzbyBpZiB3ZSBhcmUgdGhlIDFzdCB0aGUgZGF5IGlzIGN1cnJlbnRseSBwYXNzaW5nIGZyb20gMCB0byAyNGhcbiAgICB2YXIgZGF0ZUluSCA9ICgoY3VycmVudERhdGUgLSAxKSAqIDI0KSArIGN1cnJlbnRIb3VycztcbiAgICByZXR1cm4gZGF0ZUluSDtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5nZXREYXlJbk1pbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoSW5NaW4gPSB0aGlzLmdldEhvdXJzSW5NaW4oKTtcbiAgICB2YXIgY3VycmVudERheSA9IHRoaXMuX2dldERheSgpO1xuICAgIC8vIGEgZGF5IGhhcyAyNCBob3VycyBzbyBpZiB3ZSBhcmUgdGhlIDFzdCB0aGUgZGF5IGlzIGN1cnJlbnRseSBwYXNzaW5nIGZyb20gMCB0byAyNGhcbiAgICB2YXIgZGF5SW5NaW4gPSAoKGN1cnJlbnREYXkgPiAwID8gY3VycmVudERheSAtPSAxIDogam91ciA9IDYpICogMjQgKiA2MCkgKyBoSW5NaW47XG4gICAgcmV0dXJuIGRheUluTWluO1xufTtcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG4vLy8vIEdFVCBUSU1FIElOIERFR1JFRSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5Nb2RlbC5wcm90b3R5cGUuZ2V0U2Vjb25kc0luRGVncmVlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjdXJyZW50UyA9IHRoaXMuZ2V0U2Vjb25kc0luTWxzKCk7XG4gICAgdmFyIHNlY29uZEluRGVncmVlID0gY3VycmVudFMgKiAoMzYwIC8gKDYwICogMTAwMCkpO1xuICAgIHJldHVybiBzZWNvbmRJbkRlZ3JlZTtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5nZXRNaW51dGVzSW5EZWdyZWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGN1cnJlbnRNID0gdGhpcy5nZXRNaW51dGVzSW5NbHMoKTtcbiAgICB2YXIgbWludXRlSW5EZWdyZWUgPSBjdXJyZW50TSAqICgzNjAgLyAoNjAgKiA2MCAqIDEwMDApKTtcbiAgICByZXR1cm4gbWludXRlSW5EZWdyZWU7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuZ2V0SG91cnNJbkRlZ3JlZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY3VycmVudEggPSB0aGlzLmdldEhvdXJzSW5TKCk7XG4gICAgdmFyIGhvdXJJbkRlZ3JlZSA9IGN1cnJlbnRIICogKDM2MCAvICgyNCAqIDYwICogNjApKTtcbiAgICByZXR1cm4gaG91ckluRGVncmVlO1xufTtcbi8vIEdldCBob3cgbWFueSBkYXlzIGluIHRoZSBjdXJyZW50IG1vbnRoXG5Nb2RlbC5wcm90b3R5cGUuZ2V0RGF5c01heEluTW9udGggPSBmdW5jdGlvbiAoeWVhciwgbW9udGgpIHtcbiAgICAvLyB3aGVuIERhdGUgaXMgY3JlYXRlZCwgZ2l2ZSBpdCBwYXJhbWV0ZXJzIHRvIGdldCB0aGUgZGF0ZSB5b3Ugd2FudFxuICAgIC8vIEhlcmUgd2UgbmVlZCB0byBrbm93IGhvdyBtYW55IGRheXMgdGhlcmUgYXJlIGluIHRoZSBjdXJyZW50IG1vbnRoXG4gICAgLy8gU28gd2UgZ2l2ZSB0byBuZXcgRGF0ZSB0aGUgY3VycmVudCB5ZWFyLFxuICAgIC8vIHRoZSBjdXJyZW50IG1vbnRoKzEgPSBuZXh0IG1vbnRoLCB3aXRoIHRoZSAzcmQgcGFyYW1ldGVyIHRoYXQgaXMgMCBmb3IgZGF5IDBcbiAgICAvLyBGb3IgZXhhbXBsZSA6ICgyMDE2ICwgMiArIDEgLCAwKSA9PiAyMDE2IDMoQXByaWwpIDAgPSAyMDE2IDIoTWFyY2gpIDMxKGxhc3QgZGF5KVxuICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCBtb250aCArIDEsIDApLmdldERhdGUoKTtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5nZXREYXRlSW5EZWdyZWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGN1cnJlbnREYXRlID0gdGhpcy5nZXREYXRlSW5NaW4oKTtcbiAgICAvLyBIb3cgbWFueSBkYXlzIGluIHRoZSBjdXJyZW50IG1vbnRoXG4gICAgdmFyIGRheXNNYXggPSB0aGlzLmdldERheXNNYXhJbk1vbnRoKHRoaXMuX2dldFllYXIoKSx0aGlzLl9nZXRNb250aCgpKTtcbiAgICB2YXIgZGF0ZUluRGVncmVlID0gY3VycmVudERhdGUgKiAoMzYwIC8gKGRheXNNYXggKiAyNCAqIDYwKSk7XG4gICAgcmV0dXJuIGRhdGVJbkRlZ3JlZTtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5nZXREYXlJbkRlZ3JlZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY3VycmVudERheSA9IHRoaXMuZ2V0RGF5SW5NaW4oKTtcbiAgICB2YXIgZGF5SW5EZWdyZWUgPSBjdXJyZW50RGF5ICogKDM2MCAvICg3ICogMjQgKiA2MCkpO1xuICAgIHJldHVybiBkYXlJbkRlZ3JlZTtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5nZXRNb250aEluRGVncmVlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjdXJyZW50RGF0ZSA9IHRoaXMuZ2V0RGF0ZUluSCgpO1xuICAgIHZhciBjdXJyZW50TW9udGggPSB0aGlzLl9nZXRNb250aCgpO1xuICAgIHZhciBkYXlzTWF4ID0gdGhpcy5nZXREYXlzTWF4SW5Nb250aCh0aGlzLl9nZXRZZWFyKCksdGhpcy5fZ2V0TW9udGgoKSk7XG4gICAgdmFyIG1vbnRoSW5EZWdyZWUgPSAoY3VycmVudE1vbnRoICogKDM2MC8xMikgKSArICggY3VycmVudERhdGUgKiAoICgzNjAvMTIpIC8gKGRheXNNYXgqMjQpICkgKTtcbiAgICByZXR1cm4gbW9udGhJbkRlZ3JlZTtcbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLy8vLyBTRVRUSU5HIFRJTUUgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuTW9kZWwucHJvdG90eXBlLl9zZXRNaWxsaXNlY29uZHMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy5fbWlsbGlzZWNvbmRzID0gbmV3RGF0ZS5nZXRNaWxsaXNlY29uZHMoKTtcbiAgICB0aGlzLmVtaXQoJ21zQ2hhbmdlJyk7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuX3NldFNlY29uZHMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy5fc2Vjb25kcyA9IG5ld0RhdGUuZ2V0U2Vjb25kcygpO1xuICAgIHRoaXMuZW1pdCgnc0NoYW5nZScpO1xufTtcblxuTW9kZWwucHJvdG90eXBlLl9zZXRNaW51dGVzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG5ld0RhdGUgPSBuZXcgRGF0ZSgpO1xuICAgIHRoaXMuX21pbnV0ZXMgPSBuZXdEYXRlLmdldE1pbnV0ZXMoKTtcbiAgICB0aGlzLmVtaXQoJ21DaGFuZ2UnKTtcbn07XG5cbk1vZGVsLnByb3RvdHlwZS5fc2V0SG91cnMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy5faG91cnMgPSBuZXdEYXRlLmdldEhvdXJzKCk7XG4gICAgdGhpcy5lbWl0KCdoQ2hhbmdlJyk7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuX3NldERhdGUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy5fZGF0ZSA9IG5ld0RhdGUuZ2V0RGF0ZSgpO1xuICAgIHRoaXMuZW1pdCgnZGF0ZUNoYW5nZScpO1xufTtcblxuTW9kZWwucHJvdG90eXBlLl9zZXREYXkgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy5fZGF5ID0gbmV3RGF0ZS5nZXREYXkoKTtcbiAgICB0aGlzLmVtaXQoJ2RheUNoYW5nZScpO1xufTtcblxuTW9kZWwucHJvdG90eXBlLl9zZXRNb250aCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBuZXdEYXRlID0gbmV3IERhdGUoKTtcbiAgICB0aGlzLl9tb250aCA9IG5ld0RhdGUuZ2V0TW9udGgoKTtcbiAgICB0aGlzLmVtaXQoJ21vbnRoQ2hhbmdlJyk7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuX3NldFllYXIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgdGhpcy5feWVhciA9IG5ld0RhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICB0aGlzLmVtaXQoJ3llYXJDaGFuZ2UnKTtcbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4iLCIvLyBhcmMuanNcbmZ1bmN0aW9uIEFyYyhvdXRlclJhZGl1cyxhcmNXaWR0aCxjb2xvcixfY3R4KXtcbiAgICAvLyBBcmMgcHJvcGVydGllc1xuICAgIHRoaXMub3V0ZXJSYWRpdXMgPSBvdXRlclJhZGl1cztcbiAgICB0aGlzLmFyY1dpZHRoID0gYXJjV2lkdGg7XG4gICAgdGhpcy5pbm5lclJhZGl1cyA9IHRoaXMub3V0ZXJSYWRpdXMgLSB0aGlzLmFyY1dpZHRoO1xuICAgIHRoaXMuYXJjU3RhcnRJbkRlZ3JlZSA9IDA7XG4gICAgdGhpcy5fY29sb3IgPSBjb2xvcjtcbiAgICAvLyBSb3VuZGVkIGNvcm5lcnMgcHJvcGVydGllc1xuICAgIHRoaXMuY29ybmVyU2l6ZSA9IDQ7XG4gICAgdGhpcy5jdHggPSBfY3R4O1xufVxuXG5BcmMucHJvdG90eXBlLmRyYXdBcmMgPSBmdW5jdGlvbiAodGltZUluRGVncmVlKXtcbiAgICAvL3RoaXMuY3R4ID0gY3R4O1xuICAgIHRoaXMuYXJjRW5kSW5EZWdyZWUgPSB0aW1lSW5EZWdyZWU7XG4gICAgdGhpcy5vdXRlckNvcm5lclggPSAodGhpcy5vdXRlclJhZGl1cyAtIHRoaXMuY29ybmVyU2l6ZSkgKiAoTWF0aC5jb3MoKHRoaXMuYXJjRW5kSW5EZWdyZWUpICogKE1hdGguUEkgLyAxODApKSk7XG4gICAgdGhpcy5vdXRlckNvcm5lclkgPSAodGhpcy5vdXRlclJhZGl1cyAtIHRoaXMuY29ybmVyU2l6ZSkgKiAoTWF0aC5zaW4oKHRoaXMuYXJjRW5kSW5EZWdyZWUpICogKE1hdGguUEkgLyAxODApKSk7XG4gICAgdGhpcy5pbm5lckNvcm5lclggPSAodGhpcy5pbm5lclJhZGl1cyArIHRoaXMuY29ybmVyU2l6ZSkgKiAoTWF0aC5jb3MoKHRoaXMuYXJjRW5kSW5EZWdyZWUpICogKE1hdGguUEkgLyAxODApKSk7XG4gICAgdGhpcy5pbm5lckNvcm5lclkgPSAodGhpcy5pbm5lclJhZGl1cyArIHRoaXMuY29ybmVyU2l6ZSkgKiAoTWF0aC5zaW4oKHRoaXMuYXJjRW5kSW5EZWdyZWUpICogKE1hdGguUEkgLyAxODApKSk7XG4gICAgdGhpcy5vdXRlckNvcm5lckFyY1N0YXJ0ID0gKDAgKyB0aGlzLmFyY0VuZEluRGVncmVlKSAqIChNYXRoLlBJIC8gMTgwKTtcbiAgICB0aGlzLm91dGVyQ29ybmVyQXJjRW5kID0gKDkwICsgdGhpcy5hcmNFbmRJbkRlZ3JlZSkgKiAoTWF0aC5QSSAvIDE4MCk7XG4gICAgdGhpcy5pbm5lckNvcm5lckFyY1N0YXJ0ID0gKDkwICsgdGhpcy5hcmNFbmRJbkRlZ3JlZSkgKiAoTWF0aC5QSSAvIDE4MCk7XG4gICAgdGhpcy5pbm5lckNvcm5lckFyY0VuZCA9ICgxODAgKyB0aGlzLmFyY0VuZEluRGVncmVlKSAqIChNYXRoLlBJIC8gMTgwKTtcblxuICAgIHRoaXMuY3R4LnNhdmUoKTtcbiAgICAvLyBTdGFydCBkcmF3aW5nXG4gICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG4gICAgLy8gQXJjIHBhcmFtZXRlcnMgKGNlbnRlciBjb29yZGluYXRlIFgsIGNlbnRlciBjb29yZGluYXRlIFksIHJhZGl1cywgc3RhcnRpbmcgYW5nbGUsIGVuZGluZyBhbmdsZSwgY291bnRlckNsb2Nrd2lzZSlcbiAgICAvL1N0YXJ0IGlubmVyIHJvdW5kZWQgY29ybmVyXG4gICAgdGhpcy5jdHguYXJjKHRoaXMuaW5uZXJSYWRpdXMgKyB0aGlzLmNvcm5lclNpemUsIDAsIHRoaXMuY29ybmVyU2l6ZSwgMTgwICogKE1hdGguUEkgLyAxODApLCAyNzAgKiAoTWF0aC5QSSAvIDE4MCksIGZhbHNlKTtcbiAgICAvL1N0YXJ0IG91dGVyIHJvdW5kZWQgY29ybmVyXG4gICAgdGhpcy5jdHguYXJjKHRoaXMub3V0ZXJSYWRpdXMgLSB0aGlzLmNvcm5lclNpemUsIDAsIHRoaXMuY29ybmVyU2l6ZSwgMjcwICogKE1hdGguUEkgLyAxODApLCAwICogKE1hdGguUEkgLyAxODApLCBmYWxzZSk7XG4gICAgLy9PdXRlciBhcmNcbiAgICB0aGlzLmN0eC5hcmMoMCwgMCwgdGhpcy5vdXRlclJhZGl1cywgKHRoaXMuYXJjU3RhcnRJbkRlZ3JlZSAqIChNYXRoLlBJIC8gMTgwKSksICh0aGlzLmFyY0VuZEluRGVncmVlICogKE1hdGguUEkgLyAxODApKSwgZmFsc2UpO1xuICAgIC8vRXh0cmltaXR5IG91dGVyIHJvdW5kZWQgY29ybmVyXG4gICAgdGhpcy5jdHguYXJjKHRoaXMub3V0ZXJDb3JuZXJYLCB0aGlzLm91dGVyQ29ybmVyWSwgdGhpcy5jb3JuZXJTaXplLCB0aGlzLm91dGVyQ29ybmVyQXJjU3RhcnQsIHRoaXMub3V0ZXJDb3JuZXJBcmNFbmQsIGZhbHNlKTtcbiAgICAvL0V4dHJpbWl0eSBpbm5lciByb3VuZGVkIGNvcm5lclxuICAgIHRoaXMuY3R4LmFyYyh0aGlzLmlubmVyQ29ybmVyWCwgdGhpcy5pbm5lckNvcm5lclksIHRoaXMuY29ybmVyU2l6ZSwgdGhpcy5pbm5lckNvcm5lckFyY1N0YXJ0LCB0aGlzLmlubmVyQ29ybmVyQXJjRW5kLCBmYWxzZSk7XG4gICAgLy9Jbm5lciBhcmNcbiAgICB0aGlzLmN0eC5hcmMoMCwgMCwgdGhpcy5pbm5lclJhZGl1cywgKHRoaXMuYXJjRW5kSW5EZWdyZWUgKiAoTWF0aC5QSSAvIDE4MCkpLCAodGhpcy5hcmNTdGFydEluRGVncmVlICogKE1hdGguUEkgLyAxODApKSwgdHJ1ZSk7XG4gICAgdGhpcy5jdHguY2xvc2VQYXRoKCk7XG5cbiAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSB0aGlzLl9jb2xvcjtcbiAgICB0aGlzLmN0eC5maWxsKCk7XG4gICAgdGhpcy5jdHgucmVzdG9yZSgpO1xufTtcblxuXG4vLy8vIFNFQVJDSCBURVhUIE9OIFNWRyBBUkMgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5BcmMucHJvdG90eXBlLmRyYXdBcmNUZXh0ID0gZnVuY3Rpb24odGltZSxhbmdsZSx2YWx1ZSl7XG4gICAgJCgnI3N2ZycpLmVtcHR5KCk7XG4gICAgdmFyIHN2Z25zID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJztcbiAgICB2YXIgZGVmcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmducyAsICdkZWZzJyk7XG4gICAgdmFyIHBhdGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnbnMsICdwYXRoJyk7XG4gICAgdmFyIHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnbnMsICd0ZXh0Jyk7XG4gICAgdmFyIHRleHRwYXRoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z25zLCAndGV4dHBhdGgnKTtcblxuICAgIHBhdGguc2V0QXR0cmlidXRlKCdpZCcsICd0aW1lSW5UZXh0Jyk7XG4gICAgcGF0aC5zZXRBdHRyaWJ1dGUoICdkJyAsIHRoaXMuYXJjVGV4dCgyNTAsMjUwLDIwMCwgMCwgYW5nbGUpICk7XG5cbiAgICB0ZXh0LnNldEF0dHJpYnV0ZSgnZm9udC1mYW1pbHknLCdWZXJkYW5hJyk7XG4gICAgdGV4dC5zZXRBdHRyaWJ1dGUoJ2ZvbnQtc2l6ZScsJzE1Jyk7XG4gICAgdGV4dC5zZXRBdHRyaWJ1dGUoJ3RleHQtYW5jaG9yJywnZW5kJyk7XG5cbiAgICB0ZXh0cGF0aC5zZXRBdHRyaWJ1dGUoJ3hsaW5rOmhyZWYnICwgJyN0aW1lSW5UZXh0Jyk7XG4gICAgdGV4dHBhdGguc2V0QXR0cmlidXRlKCdzdGFydE9mZnNldCcgLCAnMTAwJScpO1xuICAgIHRleHRwYXRoLnNldEF0dHJpYnV0ZSgnaWQnLCd0ZXh0Y3VydmUnKTtcbiAgICB0ZXh0cGF0aC50ZXh0Q29udGVudD10aW1lKycgJyt2YWx1ZTtcblxuICAgIGRlZnMuYXBwZW5kQ2hpbGQocGF0aCk7XG4gICAgdGV4dC5hcHBlbmRDaGlsZCh0ZXh0cGF0aCk7XG4gICAgc3ZnLmFwcGVuZENoaWxkKGRlZnMpO1xuICAgIHN2Zy5hcHBlbmRDaGlsZCh0ZXh0KTtcblxuICAgICQoJyNzdmcnKS5jc3MoJ2JvcmRlcicsICcxcHggYmxhY2sgc29saWQnKTtcbiAgICAkKFwiI2NvbnRcIikuaHRtbCgkKFwiI2NvbnRcIikuaHRtbCgpKTtcblxufTtcblxuXG5BcmMucHJvdG90eXBlLmFyY1RleHQgPSBmdW5jdGlvbihjeCwgY3ksIHJhZGl1cywgc3RhcnREZWdyZWVzLCBlbmREZWdyZWVzKSB7XG4gICAgdmFyIG9mZnNldFJhZGlhbnMgPSAtTWF0aC5QSS8yOyAvLyAtTWF0aC5QSS8yIGZvciAxMiBvJ2Nsb2NrXG4gICAgdmFyIHN0YXJ0UmFkaWFucyA9IG9mZnNldFJhZGlhbnMgKyBzdGFydERlZ3JlZXMgKiBNYXRoLlBJIC8gMTgwO1xuICAgIHZhciBlbmRSYWRpYW5zID0gb2Zmc2V0UmFkaWFucyArIGVuZERlZ3JlZXMgKiBNYXRoLlBJIC8gMTgwO1xuICAgIHZhciBsYXJnZUFyYyA9ICgoZW5kUmFkaWFucyAtIHN0YXJ0UmFkaWFucykgJSAoMiAqIE1hdGguUEkpKSA+IE1hdGguUEkgPyAxIDogMDtcbiAgICB2YXIgc3RhcnRYID0gcGFyc2VJbnQoY3ggKyByYWRpdXMgKiBNYXRoLmNvcyhzdGFydFJhZGlhbnMpKTtcbiAgICB2YXIgc3RhcnRZID0gcGFyc2VJbnQoY3kgKyByYWRpdXMgKiBNYXRoLnNpbihzdGFydFJhZGlhbnMpKTtcbiAgICB2YXIgZW5kWCA9IHBhcnNlSW50KGN4ICsgcmFkaXVzICogTWF0aC5jb3MoZW5kUmFkaWFucykpO1xuICAgIHZhciBlbmRZID0gcGFyc2VJbnQoY3kgKyByYWRpdXMgKiBNYXRoLnNpbihlbmRSYWRpYW5zKSk7XG4gICAgdmFyIHNwYWNlID0gXCIgXCI7XG4gICAgdmFyIGFyY0RhdGEgPSBcIlwiO1xuICAgIGFyY0RhdGEgKz0gXCJNXCIgKyBzcGFjZSArIHN0YXJ0WCArIHNwYWNlICsgc3RhcnRZICsgc3BhY2U7XG4gICAgYXJjRGF0YSArPSBcIkFcIiArIHNwYWNlICsgcmFkaXVzICsgc3BhY2UgKyByYWRpdXMgKyBzcGFjZSArIG9mZnNldFJhZGlhbnMgKyBzcGFjZSArIGxhcmdlQXJjICsgc3BhY2UgKyAxICsgc3BhY2UgKyBlbmRYICsgc3BhY2UgKyBlbmRZO1xuICAgIHJldHVybiAoYXJjRGF0YSk7XG59O1xuIiwiZnVuY3Rpb24gVmlldyhtb2RlbCkge1xuICAgIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuICAgIHRoaXMuX21vZGVsID0gbW9kZWw7XG4gICAgdGhpcy5jdHggPSAkKCcjY2FudmFzJylbMF0uZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAvLyBBbGwgdGhlIERPTSBlbGVtZW50cyB0byBnZXRcbiAgICB0aGlzLl9lbGVtZW50cyA9IFsnaG91cicsICdtaW51dGUnLCAnc2Vjb25kJ107XG4gICAgdGhpcy5fZ2V0RWxlbWVudHMoKTtcbiAgICB0aGlzLl9pbml0KCk7XG4gICAgdGhpcy5fYmluZEFjdGlvbnMoKTtcbn1cbi8vIEV2ZW50RW1pdHRlciBpbmhlcml0YW5jZVxuVmlldy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEV2ZW50RW1pdHRlci5wcm90b3R5cGUpO1xuVmlldy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBWaWV3O1xuXG5WaWV3LnByb3RvdHlwZS5faW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3JlZHJhdygpO1xufTtcblxuLy8gR2V0IGFsbCB0aGUgRE9NIGVsZW1lbnRzIGFuZCBiaW5kIGVtaXRcbi8vIEJhc2ljYWxseSwgaXQgdHJhbnNmb3JtcyBET00gZXZlbnQgaW50byBWaWV3IGV2ZW50XG5WaWV3LnByb3RvdHlwZS5fZ2V0RWxlbWVudHMgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9lbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGVsKSB7IC8vIFsnaG91cicsIC4uLiBdXG4gICAgICAgIHRoaXNbJ18nICsgZWxdID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWwpOyAvLyBleDogdGhpcy5faG91ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdob3VyJyk7XG4gICAgfSwgdGhpcyk7XG59O1xuXG4vLyBXaGF0IG11c3QgSSBkbyB3aGVuIG1vZGVsIGNoYW5nZXM/XG5WaWV3LnByb3RvdHlwZS5fYmluZEFjdGlvbnMgPSBmdW5jdGlvbigpIHtcbiAgICAgdGhpcy5fbW9kZWwub24oJ3NDaGFuZ2UnLCB0aGlzLl9kcmF3U2Vjb25kcy5iaW5kKHRoaXMpKTtcbiAgICAgdGhpcy5fbW9kZWwub24oJ21DaGFuZ2UnLCB0aGlzLl9kcmF3TWludXRlcy5iaW5kKHRoaXMpKTtcbiAgICAgdGhpcy5fbW9kZWwub24oJ2hDaGFuZ2UnLCB0aGlzLl9kcmF3SG91cnMuYmluZCh0aGlzKSk7XG5cbiAgICB0aGlzLl9tb2RlbC5vbigndGljJywgdGhpcy5jYW52YXNSZWZyZXNoLmJpbmQodGhpcykpO1xuICAgIHRoaXMuX21vZGVsLm9uKCdzQ2hhbmdlJywgdGhpcy5fZHJhd1NlY29uZHNBcmMuYmluZCh0aGlzKSk7XG4gICAgdGhpcy5fbW9kZWwub24oJ21DaGFuZ2UnLCB0aGlzLl9kcmF3TWludXRlc0FyYy5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLl9tb2RlbC5vbignaENoYW5nZScsIHRoaXMuX2RyYXdIb3Vyc0FyYy5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLl9tb2RlbC5vbignZGF0ZUNoYW5nZScsIHRoaXMuX2RyYXdEYXRlQXJjLmJpbmQodGhpcykpO1xuICAgIHRoaXMuX21vZGVsLm9uKCdkYXlDaGFuZ2UnLCB0aGlzLl9kcmF3RGF5QXJjLmJpbmQodGhpcykpO1xuICAgIHRoaXMuX21vZGVsLm9uKCdtb250aENoYW5nZScsIHRoaXMuX2RyYXdNb250aEFyYy5iaW5kKHRoaXMpKTtcbn07XG5cbi8vIFJlZHJhdyB0aGUgY2xvY2tcblZpZXcucHJvdG90eXBlLl9yZWRyYXcgPSBmdW5jdGlvbigpIHtcbiAgICAgdGhpcy5fZHJhd1NlY29uZHMoKTtcbiAgICAgdGhpcy5fZHJhd01pbnV0ZXMoKTtcbiAgICAgdGhpcy5fZHJhd0hvdXJzKCk7XG5cbiAgICB0aGlzLl9zZWNvbmRzQXJjID0gbmV3IEFyYygyNDAsIDI1LCAncmVkJywgdGhpcy5jdHgpO1xuICAgIHRoaXMuX21pbnV0ZXNBcmMgPSBuZXcgQXJjKDIxMCwgMjUsICdvcmFuZ2UnLCB0aGlzLmN0eCk7XG4gICAgdGhpcy5faG91cnNBcmMgPSBuZXcgQXJjKDE4MCwgMjUsICdnb2xkJywgdGhpcy5jdHgpO1xuICAgIHRoaXMuX2RhdGVBcmMgPSBuZXcgQXJjKDE1MCwgMjUsICdwdXJwbGUnLCB0aGlzLmN0eCk7XG4gICAgdGhpcy5fZGF5QXJjID0gbmV3IEFyYygxMjAsIDI1LCAnZnVjaHNpYScsIHRoaXMuY3R4KTtcbiAgICB0aGlzLl9tb250aEFyYyA9IG5ldyBBcmMoOTAsIDI1LCAncGluaycsIHRoaXMuY3R4KTtcbiAgICB0aGlzLmNhbnZhc1JlZnJlc2goKTtcbiAgICB0aGlzLl9kcmF3U2Vjb25kc0FyYygpO1xuICAgIHRoaXMuX2RyYXdNaW51dGVzQXJjKCk7XG4gICAgdGhpcy5fZHJhd0hvdXJzQXJjKCk7XG4gICAgdGhpcy5fZHJhd0RhdGVBcmMoKTtcbiAgICB0aGlzLl9kcmF3RGF5QXJjKCk7XG4gICAgdGhpcy5fZHJhd01vbnRoQXJjKCk7XG59O1xuXG4vLy8vIERSQVcgVElNRSBBUyBBUkMgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8vIFJlZnJlc2ggY2FudmFzXG5WaWV3LnByb3RvdHlwZS5jYW52YXNSZWZyZXNoID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5jdHguc2V0VHJhbnNmb3JtKDEsIDAsIDAsIDEsIDAsIDApO1xuICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgIHRoaXMuY3R4LnRyYW5zbGF0ZShjYW52YXMud2lkdGggLyAyLCBjYW52YXMuaGVpZ2h0IC8gMik7XG4gICAgdGhpcy5jdHgucm90YXRlKC05MCAqIE1hdGguUEkgLyAxODApO1xufTtcblxuVmlldy5wcm90b3R5cGUuX2RyYXdTZWNvbmRzQXJjID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNlY29uZHNJbkRlZ3JlZSA9IHRoaXMuX21vZGVsLmdldFNlY29uZHNJbkRlZ3JlZSgpO1xuICAgIHRoaXMuX3NlY29uZHNBcmMuZHJhd0FyYyhzZWNvbmRzSW5EZWdyZWUpO1xuXG59O1xuXG5WaWV3LnByb3RvdHlwZS5fZHJhd01pbnV0ZXNBcmMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbWludXRlc0luRGVncmVlID0gdGhpcy5fbW9kZWwuZ2V0TWludXRlc0luRGVncmVlKCk7XG4gICAgdGhpcy5fbWludXRlc0FyYy5kcmF3QXJjKG1pbnV0ZXNJbkRlZ3JlZSk7XG59O1xuXG5WaWV3LnByb3RvdHlwZS5fZHJhd0hvdXJzQXJjID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhvdXJzSW5EZWdyZWUgPSB0aGlzLl9tb2RlbC5nZXRIb3Vyc0luRGVncmVlKCk7XG4gICAgdGhpcy5faG91cnNBcmMuZHJhd0FyYyhob3Vyc0luRGVncmVlKTtcbn07XG5cblZpZXcucHJvdG90eXBlLl9kcmF3RGF0ZUFyYyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkYXRlSW5EZWdyZWUgPSB0aGlzLl9tb2RlbC5nZXREYXRlSW5EZWdyZWUoKTtcbiAgICB0aGlzLl9kYXRlQXJjLmRyYXdBcmMoZGF0ZUluRGVncmVlKTtcbn07XG5cblZpZXcucHJvdG90eXBlLl9kcmF3RGF5QXJjID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRheUluRGVncmVlID0gdGhpcy5fbW9kZWwuZ2V0RGF5SW5EZWdyZWUoKTtcbiAgICB0aGlzLl9kYXlBcmMuZHJhd0FyYyhkYXlJbkRlZ3JlZSk7XG59O1xuXG5WaWV3LnByb3RvdHlwZS5fZHJhd01vbnRoQXJjID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG1vbnRoSW5EZWdyZWUgPSB0aGlzLl9tb2RlbC5nZXRNb250aEluRGVncmVlKCk7XG4gICAgdGhpcy5fbW9udGhBcmMuZHJhd0FyYyhtb250aEluRGVncmVlKTtcbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLy8vLyBEUkFXIFRJTUUgQVMgRElWIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4vLyBob3cgdG8gZHJhdyB0aGUgZGl2XG5WaWV3LnByb3RvdHlwZS5fZHJhd0RpdiA9IGZ1bmN0aW9uKGRpdldpZHRoLCBjb2xvciwgdGltZSkge1xuICAgIHZhciBkaXYgPSAkKCc8ZGl2PicpLmF0dHIoJ2NsYXNzJywgJ3RpbWVkaXYnKS5jc3MoJ3dpZHRoJywgZGl2V2lkdGggKyAnJScpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGNvbG9yKS50ZXh0KHRpbWUpO1xuICAgIHJldHVybiBkaXY7XG59O1xuXG5WaWV3LnByb3RvdHlwZS5fZHJhd1NlY29uZHMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2Vjb25kcyA9IHRoaXMuX21vZGVsLmdldFNlY29uZHNJbk1scygpO1xuICAgICQoJyNkcmF3UycpLmVtcHR5KCk7XG4gICAgdmFyIGRpdldpZHRoO1xuICAgIGRpdldpZHRoID0gc2Vjb25kcyAqICgxMDAgLyAoNjAgKiAxMDAwKSk7XG4gICAgdmFyIGRpdiA9IHRoaXMuX2RyYXdEaXYoZGl2V2lkdGgsICdyZWQnLCAodGhpcy5fbW9kZWwuX2dldFNlY29uZHMoKSkgKyAnIHMnKTtcbiAgICAkKCcjZHJhd1MnKS5hcHBlbmQoZGl2KTtcbn07XG5cblZpZXcucHJvdG90eXBlLl9kcmF3TWludXRlcyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBtaW51dGVzID0gdGhpcy5fbW9kZWwuZ2V0TWludXRlc0luTWxzKCk7XG4gICAgJCgnI2RyYXdNJykuZW1wdHkoKTtcbiAgICB2YXIgZGl2V2lkdGg7XG4gICAgZGl2V2lkdGggPSBtaW51dGVzICogKDEwMCAvICg2MCAqIDYwICogMTAwMCkpO1xuICAgIHZhciBkaXYgPSB0aGlzLl9kcmF3RGl2KGRpdldpZHRoLCAnb3JhbmdlJywgKHRoaXMuX21vZGVsLl9nZXRNaW51dGVzKCkpICsgJyBtaW4nKTtcbiAgICAkKCcjZHJhd00nKS5hcHBlbmQoZGl2KTtcbn07XG5cblZpZXcucHJvdG90eXBlLl9kcmF3SG91cnMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaG91cnMgPSB0aGlzLl9tb2RlbC5nZXRIb3Vyc0luUygpO1xuICAgICQoJyNkcmF3SCcpLmVtcHR5KCk7XG4gICAgdmFyIGRpdldpZHRoO1xuICAgIGRpdldpZHRoID0gaG91cnMgKiAoMTAwIC8gKDI0ICogNjAgKiA2MCkpO1xuICAgIHZhciBkaXYgPSB0aGlzLl9kcmF3RGl2KGRpdldpZHRoLCAnZ29sZCcsICh0aGlzLl9tb2RlbC5fZ2V0SG91cnMoKSkgKyAnIGgnKTtcbiAgICAkKCcjZHJhd0gnKS5hcHBlbmQoZGl2KTtcbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4iLCJmdW5jdGlvbiBDb250cm9sbGVyKHZpZXcsIG1vZGVsKSB7XHJcbiAgICB0aGlzLl92aWV3ID0gdmlldztcclxuICAgIHRoaXMuX21vZGVsID0gbW9kZWw7XHJcbiAgICB0aGlzLl9iaW5kQWN0aW9ucygpO1xyXG59XHJcblxyXG4vLyBXaGF0IHRvIGRvIHdoZW4gdGhlIHZpZXcgdHJpZ2dlcnMgYW4gZXZlbnQ/XHJcbkNvbnRyb2xsZXIucHJvdG90eXBlLl9iaW5kQWN0aW9ucyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgLy8gdGhpcy5fdmlldy5vbignaFBsdXMnLCB0aGlzLl9hZGRIb3VyLmJpbmQodGhpcykpO1xyXG4gICAgLy8gdGhpcy5fdmlldy5vbignbVBsdXMnLCB0aGlzLl9hZGRNaW51dGUuYmluZCh0aGlzKSk7XHJcbiAgICAvLyB0aGlzLl92aWV3Lm9uKCdzUGx1cycsIHRoaXMuX2FkZFNlY29uZC5iaW5kKHRoaXMpKTtcclxufTtcclxuXHJcblxyXG4vLyBDb250cm9sbGVyLnByb3RvdHlwZS5fYWRkSG91ciA9IGZ1bmN0aW9uKCl7XHJcbi8vICAgdGhpcy5fbW9kZWwuYWRkSG91cigpO1xyXG4vLyB9O1xyXG4vLyBDb250cm9sbGVyLnByb3RvdHlwZS5fYWRkTWludXRlID0gZnVuY3Rpb24oKXtcclxuLy8gICB0aGlzLl9tb2RlbC5hZGRNaW51dGUoKTtcclxuLy8gfTtcclxuLy8gQ29udHJvbGxlci5wcm90b3R5cGUuX2FkZFNlY29uZCA9IGZ1bmN0aW9uKCl7XHJcbi8vICAgdGhpcy5fbW9kZWwuYWRkU2Vjb25kKCk7XHJcbi8vIH07XHJcbiIsInZhciBtb2RlbCA9IG5ldyBNb2RlbCgpO1xyXG52YXIgdmlldyA9IG5ldyBWaWV3KG1vZGVsKTtcclxudmFyIGNvbnRyb2xsZXIgPSBuZXcgQ29udHJvbGxlcih2aWV3LCBtb2RlbCk7XHJcblxyXG5tb2RlbC5zdGFydCgpO1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
