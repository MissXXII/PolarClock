function EventEmitter(){this.events={}}function Model(){EventEmitter.call(this)}function Arc(t,e,i,n){this.outerRadius=t,this.arcWidth=e,this.innerRadius=this.outerRadius-this.arcWidth,this.arcStartInDegree=0,this._color=i,this.cornerSize=3,this.ctx=n}function View(t){EventEmitter.call(this),this._model=t,this.ctx=$("#canvas")[0].getContext("2d"),this._elements=["hour","minute","second"],this._getElements(),this._init(),this._bindActions()}function Controller(t,e){this._view=t,this._model=e,this._bindActions()}EventEmitter.prototype.on=function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},EventEmitter.prototype.off=function(t,e){if(this.events[t]){var i=this.events[t].indexOf(e);i>-1&&this.events[t].splice(i,1)}},EventEmitter.prototype.emit=function(t,e){this.events[t]&&this.events[t].forEach(function(t){t(e)})},Model.prototype=Object.create(EventEmitter.prototype),Model.prototype.constructor=Model,Model.prototype.start=function(){this.init(),this._tic()},Model.prototype.init=function(){this._setMilliseconds(),this._setSeconds(),this._setMinutes(),this._setHours(),this._setDate(),this._setDay(),this._setMonth(),this._setYear()},Model.prototype._tic=function(){this.emit("tic"),this._setMilliseconds(),this._setSeconds(),this._setMinutes(),this._setHours(),this._setDate(),this._setDay(),this._setMonth(),window.requestAnimationFrame(this._tic.bind(this))},Model.prototype._getMilliseconds=function(){return this._milliseconds},Model.prototype._getSeconds=function(){return this._seconds},Model.prototype._getMinutes=function(){return this._minutes},Model.prototype._getHours=function(){return this._hours},Model.prototype._getDate=function(){return this._date},Model.prototype._getDay=function(){return this._day},Model.prototype._getMonth=function(){return this._month},Model.prototype._getYear=function(){return this._year},Model.prototype.getSecondsInMls=function(){var t=this._getSeconds(),e=this._getMilliseconds(),i=1e3*t+e;return i},Model.prototype.getMinutesInMls=function(){var t=this.getSecondsInMls(),e=this._getMinutes(),i=60*e*1e3+t;return i},Model.prototype.getMinutesInS=function(){var t=this._getSeconds(),e=this._getMinutes(),i=60*e+t;return i},Model.prototype.getHoursInS=function(){var t=this.getMinutesInS(),e=this._getHours(),i=60*e*60+t;return i},Model.prototype.getHoursInMin=function(){var t=this._getMinutes(),e=this._getHours(),i=60*e+t;return i},Model.prototype.getDateInMin=function(){var t=this.getHoursInMin(),e=this._getDate(),i=24*(e-1)*60+t;return i},Model.prototype.getDateInH=function(){var t=this._getHours(),e=this._getDate(),i=24*(e-1)+t;return i},Model.prototype.getDayInMin=function(){var t=this.getHoursInMin(),e=this._getDay(),i=24*(e>0?e-=1:jour=6)*60+t;return i},Model.prototype.getSecondsInDegree=function(){var t=this.getSecondsInMls(),e=.006*t;return e},Model.prototype.getMinutesInDegree=function(){var t=this.getMinutesInMls(),e=1e-4*t;return e},Model.prototype.getHoursInDegree=function(){var t=this.getHoursInS(),e=t*(360/86400);return e},Model.prototype.getDaysMaxInMonth=function(t,e){return new Date(t,e+1,0).getDate()},Model.prototype.getDateInDegree=function(){var t=this.getDateInMin(),e=this.getDaysMaxInMonth(this._getYear(),this._getMonth()),i=t*(360/(24*e*60));return i},Model.prototype.getDayInDegree=function(){var t=this.getDayInMin(),e=t*(360/10080);return e},Model.prototype.getMonthInDegree=function(){var t=this.getDateInH(),e=this._getMonth(),i=this.getDaysMaxInMonth(this._getYear(),this._getMonth()),n=30*e+t*(30/(24*i));return n},Model.prototype._setMilliseconds=function(){var t=new Date;this._milliseconds=t.getMilliseconds(),this.emit("msChange")},Model.prototype._setSeconds=function(){var t=new Date;this._seconds=t.getSeconds(),this.emit("sChange")},Model.prototype._setMinutes=function(){var t=new Date;this._minutes=t.getMinutes(),this.emit("mChange")},Model.prototype._setHours=function(){var t=new Date;this._hours=t.getHours(),this.emit("hChange")},Model.prototype._setDate=function(){var t=new Date;this._date=t.getDate(),this.emit("dateChange")},Model.prototype._setDay=function(){var t=new Date;this._day=t.getDay(),this.emit("dayChange")},Model.prototype._setMonth=function(){var t=new Date;this._month=t.getMonth(),this.emit("monthChange")},Model.prototype._setYear=function(){var t=new Date;this._year=t.getFullYear(),this.emit("yearChange")},Arc.prototype.drawArc=function(t){this.arcEndInDegree=t,this.outerCornerX=(this.outerRadius-this.cornerSize)*Math.cos(this.arcEndInDegree*(Math.PI/180)),this.outerCornerY=(this.outerRadius-this.cornerSize)*Math.sin(this.arcEndInDegree*(Math.PI/180)),this.innerCornerX=(this.innerRadius+this.cornerSize)*Math.cos(this.arcEndInDegree*(Math.PI/180)),this.innerCornerY=(this.innerRadius+this.cornerSize)*Math.sin(this.arcEndInDegree*(Math.PI/180)),this.outerCornerArcStart=(0+this.arcEndInDegree)*(Math.PI/180),this.outerCornerArcEnd=(90+this.arcEndInDegree)*(Math.PI/180),this.innerCornerArcStart=(90+this.arcEndInDegree)*(Math.PI/180),this.innerCornerArcEnd=(180+this.arcEndInDegree)*(Math.PI/180),this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(this.innerRadius+this.cornerSize,0,this.cornerSize,180*(Math.PI/180),270*(Math.PI/180),!1),this.ctx.arc(this.outerRadius-this.cornerSize,0,this.cornerSize,270*(Math.PI/180),0*(Math.PI/180),!1),this.ctx.arc(0,0,this.outerRadius,this.arcStartInDegree*(Math.PI/180),this.arcEndInDegree*(Math.PI/180),!1),this.ctx.arc(this.outerCornerX,this.outerCornerY,this.cornerSize,this.outerCornerArcStart,this.outerCornerArcEnd,!1),this.ctx.arc(this.innerCornerX,this.innerCornerY,this.cornerSize,this.innerCornerArcStart,this.innerCornerArcEnd,!1),this.ctx.arc(0,0,this.innerRadius,this.arcEndInDegree*(Math.PI/180),this.arcStartInDegree*(Math.PI/180),!0),this.ctx.closePath(),this.ctx.fillStyle=this._color,this.ctx.fill(),this.ctx.restore()},View.prototype=Object.create(EventEmitter.prototype),View.prototype.constructor=View,View.prototype._init=function(){this._redraw()},View.prototype._getElements=function(){this._elements.forEach(function(t){this["_"+t]=document.getElementById(t)},this)},View.prototype._bindActions=function(){this._model.on("sChange",this._drawSeconds.bind(this)),this._model.on("mChange",this._drawMinutes.bind(this)),this._model.on("hChange",this._drawHours.bind(this)),this._model.on("tic",this.canvasRefresh.bind(this)),this._model.on("sChange",this._drawSecondsArc.bind(this)),this._model.on("mChange",this._drawMinutesArc.bind(this)),this._model.on("hChange",this._drawHoursArc.bind(this)),this._model.on("dateChange",this._drawDateArc.bind(this)),this._model.on("dayChange",this._drawDayArc.bind(this)),this._model.on("monthChange",this._drawMonthArc.bind(this))},View.prototype._redraw=function(){this._drawSeconds(),this._drawMinutes(),this._drawHours(),this._secondsArc=new Arc(240,25,"red",this.ctx),this._minutesArc=new Arc(210,25,"orange",this.ctx),this._hoursArc=new Arc(180,25,"gold",this.ctx),this._dateArc=new Arc(140,25,"purple",this.ctx),this._dayArc=new Arc(110,25,"fuchsia",this.ctx),this._monthArc=new Arc(80,25,"pink",this.ctx),this.canvasRefresh(),this._drawSecondsArc(),this._drawMinutesArc(),this._drawHoursArc(),this._drawDateArc(),this._drawDayArc(),this._drawMonthArc()},View.prototype.canvasRefresh=function(){this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,canvas.width,canvas.height),this.ctx.translate(250,250),this.ctx.rotate(-90*Math.PI/180)},View.prototype._drawSecondsArc=function(){var t=this._model.getSecondsInDegree();this._secondsArc.drawArc(t)},View.prototype._drawMinutesArc=function(){var t=this._model.getMinutesInDegree();this._minutesArc.drawArc(t)},View.prototype._drawHoursArc=function(){var t=this._model.getHoursInDegree();this._hoursArc.drawArc(t)},View.prototype._drawDateArc=function(){var t=this._model.getDateInDegree();this._dateArc.drawArc(t)},View.prototype._drawDayArc=function(){var t=this._model.getDayInDegree();this._dayArc.drawArc(t)},View.prototype._drawMonthArc=function(){var t=this._model.getMonthInDegree();this._monthArc.drawArc(t)},View.prototype._drawDiv=function(t,e,i){var n=$("<div>").css("height","14px").css("width",t+"%").css("background-color",e).css("margin","1px 0px").text(i).css("text-align","right").css("color","white").css("font-family","arial").css("padding-right","2px").css({overflow:"hidden","white-space":"nowrap"});return n},View.prototype._drawSeconds=function(){var t=this._model.getSecondsInMls();$("#drawS").empty();var e;e=t*(100/6e4);var i=this._drawDiv(e,"red",this._model._getSeconds()+" s");$("#drawS").append(i)},View.prototype._drawMinutes=function(){var t=this._model.getMinutesInMls();$("#drawM").empty();var e;e=t*(100/36e5);var i=this._drawDiv(e,"orange",this._model._getMinutes()+" min");$("#drawM").append(i)},View.prototype._drawHours=function(){var t=this._model.getHoursInS();$("#drawH").empty();var e;e=t*(100/86400);var i=this._drawDiv(e,"gold",this._model._getHours()+" h");$("#drawH").append(i)},View.prototype._drawMillisecondsInTxt=function(){var t=this._model._getMilliseconds();this._milliseconds.innerHTML=t},View.prototype._drawSecondInTxt=function(){this._model._getSeconds();this._seconds.innerHTML=second},View.prototype._drawMinuteInTxt=function(){var t=this._model._getMinutes();this._minutes.innerHTML=10>t?"0"+t:t},View.prototype._drawHoursInTxt=function(){var t=this._model._getHours();this._hours.innerHTML=10>t?"0"+t:t},Controller.prototype._bindActions=function(){};var model=new Model,view=new View(model),controller=new Controller(view,model);model.start();
//# sourceMappingURL=data:application/json;base64,
